import "base.proto";

option optimize_for = LITE_RUNTIME;


// 应用层数据包头
message XT_HEAD_PB
{
    optional int32 flag = 1;   //1  MINI139包标识 0xF0服务器主动发包，0xF1服务器应答  0xF2客户端请求 0xF3客户端应答 0xFD卖家版标志，现只在获取好友列表以及组信息时用到
    enum EN_FLAG { FLAG_SRVACTION = 0xF0; FLAG_SRVACK = 0xF1; FLAG_CNTREQUEST = 0xF2; FLAG_CNTACK = 0xF3; FLAG_SELLCNTREQ = 0xFD; }
    optional int32 from = 2;   //2  来源,对客户端来说是版本号
    enum EN_FROM { FROM_SERVER = 0x0100; FROM_CLIENT = 2000; FROM_TRANSFER = 0x0200; }
    optional int32 cmd = 3;    //3 命令号
    optional int32 seq = 4;    //4 命令序列号
    optional int32 sid = 5;    //5 源ID (详细说明见协议文档)
    enum EN_SID { SID_SERVER = 0; };   //通用的服务器ID,不建议使用
    optional int32 dtype = 6;  // 6 目标类型 (0x01 用户，0x02 群，0x03 中转会话成员)
    enum EN_DSET_TYPE { DEST_TYPE_SERVER = 0x00; DEST_TYPE_USER = 0x01; DEST_TYPE_FAMILY = 0x02; DEST_TYPE_TRANSMIT = 0x03; }
    optional int32 did = 7;    //7 目标ID(详细说明见协议文档)s
}

// 数据包
message DataPacket
{
    required XT_HEAD_PB head = 1;  // 包头
    required bytes data = 2;       // 数据
}



message MsgInfo
{
 optional uint32 msgid = 1;
 optional string uuid = 2;
 optional uint32 fromid = 3;
 optional uint32 toid = 4;
 optional uint32 send_time = 5;
 optional string data = 6;
 optional string fromnickname = 7;
 optional uint32 fontSize = 8;
 optional uint32 fontColor = 9;
 optional uint32 fontStyle = 10;
 optional string fontName = 11;
 optional uint32 datatype = 12;
}

// 历史消息请求
message MsgListReq
{
 required uint32 fromid = 1;
 required uint32 toid = 2;
 required uint32 bgntime = 3;
 optional uint32 endtime = 4;
 optional uint32 maxmsg = 5; 
 optional uint32 bgnmsgid = 6;	// 当bgnmsgid > 0时，忽略bgntime
}

message MsgList
{
 optional uint32 ret = 1;
 required uint32 isend = 2;		// 为0表示还有历史消息没拉取完，为1表示所有历史消息都拉取完
 optional uint32 lastmsgid = 3;	// 只有isend为0时才有效，表示当前拉取到了哪一条消息记录
 optional uint32 userid = 4;	// 好友id
 repeated MsgInfo msglist = 15;
}

// 用户退出的消息
message UserOfflineIND
{
    required uint32 userid = 1;    // 用户id
}


enum EN_BUFLOCATION { LOCATION_MEM = 0x00; LOCATION_DB = 0x01; }       // buf所在的位置

// 使用老的udp协议发送大buf的数据给客户端
message Buf_ServerSend
{
    required uint32 packetCount = 1;                       // 包数量
    required uint32 idxPacket = 2;                         // 当前传输的包索引
    required string bufUnitIdx = 3;                        // buf唯一标识
    required EN_BUFLOCATION buflocation = 4;               // buf所处的位置
    required bytes packetData = 5;                         // 包二进制流
}
// 使用老的udp协议发送大buf时客户端的请求
message Buf_ClientSend
{
    required uint32 idxPacketReq = 1;                      // 请求包的索引
    required string bufUnitIdx = 2;                        // buf唯一标识
    required EN_BUFLOCATION buflocation = 3;               // buf所处的位置
}

// 消息提醒类型
enum REMIND_TYPE
{
    RT_RECEIVE_AND_POPMSG          = 0x01;                     // 接收并提醒
    RT_RECEIVE_NOT_POPMSG          = 0x02;                     // 接收但不提醒
    RT_OFF                         = 0x03;                     // 不接收
}

// 只包含userid的请求
message BaseReq
{
    required uint32 userid = 1;                             // 用户id
}

// 消息应答
message MsgRemindAck
{
    optional REMIND_TYPE neworder = 1 [default = RT_RECEIVE_AND_POPMSG];        // 新订单提醒方式
    optional REMIND_TYPE payorder = 2 [default = RT_RECEIVE_AND_POPMSG];        // 已付款提醒方式
    optional REMIND_TYPE goodscomment = 3 [default = RT_RECEIVE_AND_POPMSG];    // 商品评价提醒方式
    optional REMIND_TYPE returnorder = 4 [default = RT_RECEIVE_AND_POPMSG];     // 退换货提醒方式
}

// 客服更新操作
enum CS_UPDATE_OPER
{
    UO_ADD_CUST = 0x01;    // 添加买家
    UO_DEL_CUST = 0x02;    // 删除买家
    UO_SET_MASTER = 0x03;  // 设置监控主管
    UO_SET_CHATTING_CUST = 0x04;   // 设置正在聊天的买家
    UO_ADD_RECPTION = 0x05;
    UO_DEL_RECPTION = 0x06;
}

// 客服更新操作请求，用于服务器之间同步
message CsUpdateOperReq
{
    required CS_UPDATE_OPER updateoper = 1;     // 操作类型
    required uint32 csid = 2;                   // 客服ID
    required uint32 custid = 3;                 // 买家ID
}

// 订单中商品信息
message OrderGoodsInfo
{
    optional string itno = 1;                              // 自营商品itno
    optional string productName = 2;                       // 商品名称
    optional string sourceUrl = 3;                         // 卖场地址
    optional string picUrl = 4;                            // 图片地址
    optional uint32 qty = 5;                               // 商品数量
    optional uint32 isMall = 6;                            // 是否商城商品，1-商城，0-自营
    optional string skuId = 7;                             // 商城商品sku_id
    optional double price = 8;                             // 商品原价
    optional double subTotalPrice = 9;                     // 商品小计
    optional double coupons = 10;                          // 优惠券分摊金额
    optional double voucher = 11;                          // 抵用券分摊金额
    optional double shoppingCash = 12;                     // 购物金分摊金额
    optional double shoppingCard = 13;                     // 购物卡分摊金额
    optional double pointsPrice = 14;                      // 积分分摊金额
    optional double promote = 15;                          // 行销活动分摊金额
    optional double shippingTax = 16;                      // 跨境商品行邮税
    optional string freightNumber = 17;                    // 自营运费序号
    optional string kind = 18;                             // 自营商品类型
    optional string color = 19;                            // 颜色
    optional string size = 20;                             // 大小
}

// 新订单
message NewOrder
{
    optional string ogNo = 1;                              // 订单号
    optional string ogSeq = 2;                             // 订单流水号
    optional string memGuid = 3;                           // 会员mem_guid
    optional double totalPay = 4;                          // 支付金额;
    optional string memberName = 5;                        // 收件人
    optional string memberCellphone = 6;                   // 收件人手机号
    optional string insertDate = 7;                        // 下单时间
    optional string payType = 8;                           // 支付类型
    optional string packNo = 9;                            // 包裹号
    optional uint32 packState = 10;                        // 包裹状态
    optional string packStateStr = 11;                     // 包裹状态描述
    optional uint32 type = 12;                             // 包裹类型 1-自营 2-商城
    optional string packQueryNo = 13;                      // 物流接口查询包裹号
    optional string merchantId = 14;                       // 商家Id
    optional double freight = 15;                          // 包裹运费金额
    optional string buyername = 16;                        // 买家名字
    repeated OrderGoodsInfo goodslist = 25;
}

// 已付款订单
message PayOrder
{
    optional string ogNo = 1;                              // 订单号
    optional string ogSeq = 2;                             // 订单流水号
    optional string memGuid = 3;                           // 会员mem_guid
    optional double totalPay = 4;                          // 支付金额;
    optional string memberName = 5;                        // 收件人
    optional string memberCellphone = 6;                   // 收件人手机号
    optional string insertDate = 7;                        // 下单时间
    optional string payType = 8;                           // 支付类型
    optional string packNo = 9;                            // 包裹号
    optional uint32 packState = 10;                        // 包裹状态
    optional string packStateStr = 11;                     // 包裹状态描述
    optional uint32 type = 12;                             // 包裹类型 1-自营 2-商城
    optional string packQueryNo = 13;                      // 物流接口查询包裹号
    optional string merchantId = 14;                       // 商家Id
    optional double freight = 15;                          // 包裹运费金额
    optional string buyername = 16;                        // 买家名字
    optional string payDate = 17;                          // 付款时间
    repeated OrderGoodsInfo goodslist = 25;
}

// 已评价
message GoodsComment
{
    optional string ogNo = 1;                              // 订单号
    optional string ogSeq = 2;                             // 订单流水号
    optional string memGuid = 3;                           // 会员mem_guid
    optional string memberName = 4;                        // 收件人
    optional string memberCellphone = 5;                   // 收件人手机号
    optional string insertDate = 6;                        // 下单时间
    optional string payType = 7;                           // 支付类型
    optional string merchantId = 8;                        // 商家Id
    optional string bugername = 9;                         // 买家姓名
    optional double evaluatelevel = 10;                    // 评价等级
    optional string evaluatecontext = 11;                  // 评价内容
    optional string commentDate = 17;                      // 评价时间
    optional OrderGoodsInfo goods = 15;                    // 评价的商品
}


// 退货商品详情
message ReturnGoodsInfo
{
    optional string skuId = 1;                              // 商城商品SKUID
    optional double productPrice = 2;                       // 商品价格
    optional int32 productQty = 3;                          // 商品数量
    optional int32 returnQty = 4;                           // 退货数量
    optional string productMainUrl = 5;                     // 商品主图
    optional string sourceUrl = 6;                          // 商品URL
    optional string color = 7;                              // 颜色
    optional string size = 8;                               // 大小
    optional string reason = 9;                             // 原因
    optional double aprnPromote = 10;                       // 分摊到此商品的优惠金额
    optional double aprnVoucher = 11;                       // 分摊到此商品的优惠券金额
    optional double shippingTax = 12;                       // 分摊到此商品的行邮税金额
    optional double origPrice = 13;                         // 商品原价
    optional double aprnPoint = 14;                         // 分摊到此商品的积分
    optional double aprnPointPrice = 15;                    // 分摊到此商品的积分抵扣金额
    optional double aprnCash = 16;                          // 实退现金
    optional double refundablePrice = 17;                   // 应退金额
    optional string productName = 18;                       // 商品名称
    optional string rssSeq = 19;							// 退货子单号 
}

// 退货信息
message ReturnOrder
{
    optional string rsSeq = 1;                              // 退货批次流水号
    optional string ogNo = 2;                               // 订单编号
    optional string ogsSeq = 3;                             // 字订单流水号
    optional string applyDate = 4;                          // 申请时间
    optional double applyPrice = 5;                         // 申请金额
    optional string merchantId = 6;                         // 商家ID
    optional string memGuid = 7;                            // 会员编号
    optional string buyername = 8;                          // 买家名字
    repeated ReturnGoodsInfo goodslist = 25;
}



// 消息推送数据
message MsgPushInd
{
    required EuMsgPush mpType = 1;                         // 消息类型
    required bytes mpData = 2;                             // 消息二进制流
}

message csTeamInfoReq
{
    required int32 csId = 1;
}

message csTeamInfo
{
    required int32 csTeamid = 1;
    required int32 csQueueLength = 2;
}

message csTeamInfoAck
{
    required int32 ret = 1;
    required int32 csId = 2;
    repeated csTeamInfo teaminfo = 3;
}

message csTeamQueueInfo
{
    required int32 ret = 1;	
    required int32 csTeamId = 2;
    required int32 csQueueLength = 3;
}

<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:beans="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
             http://www.springframework.org/schema/mvc
              http://www.springframework.org/schema/mvc/spring-mvc.xsd
              http://www.springframework.org/schema/task
               http://www.springframework.org/schema/task/spring-task-3.0.xsd">

    <!-- Root Context: defines shared resources visible to all other web components -->
    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <beans:bean id="mappingJacksonHttpMessageConverter"
                        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
                <beans:property name="supportedMediaTypes">
                    <beans:list>
                        <beans:value>application/json;charset=UTF-8</beans:value>
                        <beans:value>text/json;charset=UTF-8</beans:value>
                        <beans:value>text/plain;charset=UTF-8</beans:value>
                    </beans:list>
                </beans:property>
            </beans:bean>
        </mvc:message-converters>
    </mvc:annotation-driven>


    <mvc:resources mapping="/js/**" location="/static/js/"/>
    <mvc:resources mapping="/css/**" location="/static/css/"/>
    <mvc:resources mapping="/images/**" location="/static/images/"/>
    <mvc:resources mapping="/fonts/**" location="/static/fonts/"/>
    <mvc:resources mapping="/material/**" location="/static/material/"/>

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/pages/"/>
        <beans:property name="suffix" value=".jsp"/>
    </beans:bean>

    <beans:bean class="com.feiniu.imServer.exception.CustomGlobalExceptionResolver">
    </beans:bean>

    <context:component-scan base-package="com.feiniu.imServer"/>
    <context:component-scan base-package="com.feiniu.imServer.command">
        <context:include-filter type="regex" expression=".*"></context:include-filter>
    </context:component-scan>

    <bean id="topicClient" class="com.feiniu.kafka.client.TopicClient">
        <property name="zkList" value="${zookeeper.connect}"></property>
        <property name="factor" value="2"></property>
        <property name="partition" value="3"></property>
    </bean>

    <bean id="newOrderHandler" class="com.feiniu.imServer.service.external.kafka.NewOrderHandler"/>
    <bean id="payOrderHandler" class="com.feiniu.imServer.service.external.kafka.PayOrderHandler"/>
    <bean id="returnOrderHandler" class="com.feiniu.imServer.service.external.kafka.ReturnOrderHandler"/>
    <bean id="goodsCommentHandler" class="com.feiniu.imServer.service.external.kafka.GoodsCommentHandler"/>

    <bean id="kafkaConfig" class="com.feiniu.imServer.bean.KafkaConfig">
        <property name="zookeeperConnectString" value="${zookeeper.connect}"></property>
        <property name="groupIdNewOrder" value="${kafka.newOrder.group.id}"></property>
        <property name="groupIdPayOrder" value="${kafka.payOrder.group.id}"></property>
        <property name="groupIdReturnOrder" value="${kafka.returnOrder.group.id}"></property>
        <property name="groupIdGoodsComment" value="${kafka.goodsComment.group.id}"></property>
        <property name="topicNewOrder" value="${kafka.newOrder.topic}"></property>
        <property name="topicPayOrder" value="${kafka.payOrder.topic}"></property>
        <property name="topicReturnOrder" value="${kafka.returnOrder.topic}"></property>
        <property name="topicGoodsComment" value="${kafka.goodsComment.topic}"></property>
        <property name="timeoutMilis" value="${zookeeper.connection.timeout.ms}"></property>
        <property name="offsetReset" value="${auto.offset.reset}"></property>
        <property name="newOrderHandler" ref="newOrderHandler"></property>
        <property name="payOrderHandler" ref="payOrderHandler"></property>
        <property name="returnOrderHandler" ref="returnOrderHandler"></property>
        <property name="goodsCommentHandler" ref="goodsCommentHandler"></property>
    </bean>

    <task:annotation-driven scheduler="qbScheduler" mode="proxy"/>
    <task:scheduler id="qbScheduler" pool-size="10"/>
</beans>
